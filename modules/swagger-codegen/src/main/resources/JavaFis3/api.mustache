package {{package}};

import {{modelPackage}}.*;

import io.swagger.annotations.ApiParam;
import io.swagger.jaxrs.*;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.Authorization;
import io.swagger.annotations.AuthorizationScope;
import io.swagger.annotations.ApiResponses;
import io.swagger.annotations.ApiResponse;

{{#imports}}import {{import}};
{{/imports}}

import java.util.Map;
import java.util.List;

import java.io.InputStream;

import javax.ws.rs.core.Context;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.SecurityContext;
import javax.ws.rs.*;

{{!import com.hlag.fis.buildingblock.core.adapter.ApplicationServiceEndpoint;}}

{{#useBeanValidation}}
import javax.validation.constraints.*;
{{/useBeanValidation}}

@Path("{{{baseName}}}"){{#hasConsumes}}
@Consumes({ {{#consumes}}"{{{mediaType}}}"{{#hasMore}}, {{/hasMore}}{{/consumes}} }){{/hasConsumes}}{{#hasProduces}}
@Produces({ {{#produces}}"{{{mediaType}}}"{{#hasMore}}, {{/hasMore}}{{/produces}} }){{/hasProduces}}
@Api(description = "the {{{baseName}}} API")
{{>generatedAnnotation}}
{{#operations}}
/** This class is generated for FIS3 to reflect the Swagger defined interface for {{name}}. */
public interface {{classname}} extends ApplicationServiceEndpoint {

{{#operation}}
    @{{httpMethod}}{{#subresourceOperation}}
    @Path("{{{path}}}"){{/subresourceOperation}}{{#hasConsumes}}
    @Consumes({ {{#consumes}}"{{{mediaType}}}"{{#hasMore}}, {{/hasMore}}{{/consumes}} }){{/hasConsumes}}{{#hasProduces}}
    @Produces({ {{#produces}}"{{{mediaType}}}"{{#hasMore}}, {{/hasMore}}{{/produces}} }){{/hasProduces}}
    @ApiOperation(response = {{{returnBaseType}}}.class{{#returnContainer}}, responseContainer = "{{{returnContainer}}}"{{/returnContainer}}, value = "{{{summary}}}"{{#notes}}, notes = "{{{notes}}}"{{/notes}}, tags={ {{#vendorExtensions.x-tags}}"{{tag}}",{{/vendorExtensions.x-tags}} })
    @ApiResponses(value = { 
            {{#responses}}@ApiResponse(code = {{{code}}}, message = "{{{message}}}", response = {{{baseType}}}.class{{#containerType}}, responseContainer = "{{{containerType}}}"{{/containerType}}){{#hasMore}},
            {{/hasMore}}{{/responses}} })
    Response {{nickname}}({{!#isMultipart} }        MultipartFormDataInput input, {{/isMultipart}}{{#allParams}}
            {{>params_query}}{{>params_path}}{{>params_header}}{{>params_body}}{{!^isMultipart}}{{>params_form}}{{#hasMore}}, //{{/hasMore}}{{!/isMultipart} }{{#isMultipart} }{{^isFormParam} }{{#hasMore} }, {{/hasMore} }{{/isFormParam} }{{/isMultipart}}{{/allParams}}
            {{!@Context SecurityContext securityContext}}
    );

{{/operation}}

}
{{/operations}}
